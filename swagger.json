{"swagger":"2.0","info":{"version":"1.0.0","title":"Demo Backend Documentation.","description":"Demo Backend APIs.","termsOfService":"http://swagger.io/terms/","contact":{"name":"Radhey Shyam"},"license":{"name":"MIT"}},"paths":{"/v1/user":{"post":{"tags":["User"],"summary":"Route to register an user to the database.","responses":{"200":{"description":" \n                        {\n                          \"statusCode\": 200,\n                          \"message\": \"Registered successfully.\",\n                          \"type\": \"Default\",\n                          \"data\":  {\n                            \"_id\": \"string\",\n                            \"name\": \"string\",\n                            \"email\": \"string\",\n                            \"password\": \"string\",\n                            \"createdAt\": \"string\",\n                            \"updatedAt\": \"string\",\n                            \"__v\": 0\n                          }\n                        }\n                  "}},"parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/Register"}}]}},"/v1/user/{userId}":{"get":{"tags":["User"],"summary":"Route to get an user from the database.","responses":{"200":{"description":"\n                        {\n                          \"statusCode\": 200,\n                          \"message\": \"Success.\",\n                          \"type\": \"Default\",\n                          \"data\": {\n                            \"_id\": \"string\",\n                            \"name\": \"string\",\n                            \"email\": \"string\",\n                            \"createdAt\": \"string\",\n                            \"updatedAt\": \"string\"\n                          }\n                        }"}},"parameters":[{"name":"userId","in":"path","type":"string","description":"User id.","required":true}]},"delete":{"tags":["User"],"summary":"Route to remove an user from the database.","responses":{"200":{"description":"\n                        {\n                          \"statusCode\": 200,\n                          \"message\": \"User data is successfully deleted.\",\n                          \"type\": \"Default\",\n                          \"data\": {}\n                        }\n                    "}},"parameters":[{"name":"userId","in":"path","type":"string","description":"User id.","required":true}]},"put":{"tags":["User"],"summary":"Route to update an user to the database.","responses":{"200":{"description":"\n                        {\n                          \"statusCode\": 200,\n                          \"message\": \"User data is successfully updated.\",\n                          \"type\": \"Default\",\n                          \"data\": {}\n                        }\n    "}},"parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/User_Updation"}},{"name":"userId","in":"path","type":"string","description":"User id."}]}}},"definitions":{"Register":{"type":"object","required":["isGuest","signUpType"],"properties":{"name":{"type":"string","description":"User unique name.","title":"Name"},"email":{"type":"string","description":"User's email id.","title":"Email"},"password":{"type":"string","description":"User password.","title":"Password"},"fbId":{"type":"string","description":"User unique name.","title":"fbId"},"isGuest":{"type":"boolean","description":"User is Guest or Not","title":"Is-Guest"},"signUpType":{"type":"number","format":"float","enum":[1,2,3],"description":"Normal: 1, FB: 2, Guest: 3"}}},"User_Updation":{"type":"object","required":["name","email"],"properties":{"name":{"type":"string","description":"Update User name."},"email":{"type":"string","description":"Update User's email id."}}}},"host":"0.0.0.0:2201","basePath":"/","schemes":["http","https"],"consumes":["application/json"],"produces":["application/json"]}